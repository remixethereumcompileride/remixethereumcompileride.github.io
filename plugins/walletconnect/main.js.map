{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/app.tsx","webpack:///./src/app/walletConnectUI.tsx","webpack:///./src/main.tsx","webpack:///./src/services/RemixClient.ts","webpack:///./src/services/constant.ts","webpack:///./src/css/app.css?d254","webpack:///ignored|/home/circleci/remix-project/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib|buffer","webpack:///ignored|/home/circleci/remix-project/node_modules/brorand|crypto","webpack:///ignored|/home/circleci/remix-project/node_modules/elliptic/node_modules/bn.js/lib|buffer"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../css/app.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport { EthereumClient } from '@web3modal/ethereum'\nimport { RemixClient } from '../services/RemixClient'\nimport { WalletConnectUI } from './walletConnectUI'\n\nconst remix = new RemixClient()\n\nfunction App() {\n  const [ethereumClient, setEthereumClient] = useState<EthereumClient>(null)\n  const [wagmiClient, setWagmiClient] = useState(null)\n  const [theme, setTheme] = useState<string>('dark')\n\n  useEffect(() => {\n    (async () => {\n      await remix.initClient()\n      remix.internalEvents.on('themeChanged', (theme: string) => {\n        setTheme(theme)\n      })\n      const ethereumClient = new EthereumClient(remix.wagmiClient, remix.chains)\n      \n      setWagmiClient(remix.wagmiClient)\n      setEthereumClient(ethereumClient)\n    })()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h4 className='mt-1'>WalletConnect</h4>\n      { ethereumClient && wagmiClient && <WalletConnectUI wagmiClient={wagmiClient} ethereumClient={ethereumClient} theme={theme} /> }\n    </div>\n  )\n}\n\nexport default App","import { Web3Button, Web3Modal } from \"@web3modal/react\"\nimport { WagmiConfig } from \"wagmi\"\nimport { PROJECT_ID } from \"../services/constant\"\n\nexport function WalletConnectUI ({ ethereumClient, wagmiClient, theme }) {\n\n    return (\n        <div>\n            <div style={{ display: 'inline-block' }}>\n                <WagmiConfig client={wagmiClient}>\n                    <Web3Button label='Connect to a wallet' />\n                </WagmiConfig>\n            </div>\n            <Web3Modal projectId={PROJECT_ID} ethereumClient={ethereumClient} themeMode={theme} />\n        </div>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/app'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)","import { PluginClient } from '@remixproject/plugin'\nimport { createClient } from '@remixproject/plugin-webview'\nimport { w3mConnectors, w3mProvider } from '@web3modal/ethereum'\nimport { configureChains, createClient as wagmiCreateClient } from 'wagmi'\nimport { arbitrum, arbitrumGoerli, mainnet, polygon, polygonMumbai, optimism, optimismGoerli, Chain, goerli, sepolia } from 'wagmi/chains'\nimport EventManager from \"events\"\nimport { PROJECT_ID } from './constant'\n\nexport class RemixClient extends PluginClient {\n    wagmiClient\n    chains: Chain[]\n    internalEvents: EventManager\n\n    constructor() {\n        super()\n        createClient(this)\n        this.internalEvents = new EventManager()\n        this.methods = [\"sendAsync\", \"init\"]\n        this.onload()\n    }\n\n    onActivation () {\n        this.subscribeToEvents()\n        this.call('theme', 'currentTheme').then((theme: any) => {\n            this.internalEvents.emit('themeChanged', theme.quality.toLowerCase())\n        })\n    }\n\n    init () {\n        console.log('initializing walletconnect plugin...')\n    }\n\n    async initClient () {\n        try {\n            this.chains = [arbitrum, arbitrumGoerli, mainnet, polygon, polygonMumbai, optimism, optimismGoerli, goerli, sepolia]\n            const { provider } = configureChains(this.chains, [w3mProvider({ projectId: PROJECT_ID })])\n            \n            this.wagmiClient = wagmiCreateClient({\n              autoConnect: false,\n              connectors: w3mConnectors({ projectId: PROJECT_ID, version: 1, chains: this.chains }),\n              provider\n            })\n        } catch (e) {\n            return console.error(\"Could not get a wallet connection\", e)\n        }\n    }\n\n    subscribeToEvents () {\n        this.wagmiClient.subscribe((event) => {\n            if (event.status === 'connected') {\n                this.emit('accountsChanged', [event.data.account])\n                this.emit('chainChanged', event.data.chain.id)\n            } else if (event.status === 'disconnected') {\n                this.emit('accountsChanged', [])\n                this.emit('chainChanged', 0)\n            }\n        })\n        this.on('theme', 'themeChanged', (theme: any) => {\n            this.internalEvents.emit('themeChanged', theme.quality)\n        })\n    }\n\n    sendAsync = (data: { method: string, params: string, id: string }) => {\n        return new Promise((resolve, reject) => {\n            if (this.wagmiClient) {\n                if (this.wagmiClient.data && this.wagmiClient.data.provider && this.wagmiClient.data.provider.sendAsync) {\n                    this.wagmiClient.data.provider.sendAsync(data, (error, message) => {\n                        if (error) return reject(error)\n                        resolve(message)\n                    })\n                } else if (this.wagmiClient.data && this.wagmiClient.data.provider && this.wagmiClient.data.provider.jsonRpcFetchFunc) {\n                    this.wagmiClient.data.provider.jsonRpcFetchFunc(data.method, data.params).then((message) => {\n                        resolve({\"jsonrpc\": \"2.0\", \"result\": message, \"id\": data.id})\n                    }).catch((error) => {\n                        reject(error)\n                    })\n                } else {\n                    this.wagmiClient.provider.send(data.method, data.params).then((message) => {\n                        resolve({\"jsonrpc\": \"2.0\", \"result\": message, \"id\": data.id})\n                    }).catch((error) => {\n                        reject(error)\n                    })\n                }\n            } else {\n                console.error(`Cannot make ${data.method} request. Remix client is not connect to walletconnect client`)\n                resolve({\"jsonrpc\": \"2.0\", \"result\": [], \"id\": data.id})\n            }\n        })\n    }\n}","// @ts-ignore\nexport const PROJECT_ID = WALLET_CONNECT_PROJECT_ID","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["remix","RemixClient","App","useState","ethereumClient","setEthereumClient","wagmiClient","setWagmiClient","theme","setTheme","useEffect","initClient","internalEvents","on","EthereumClient","chains","WalletConnectUI","display","PROJECT_ID","ReactDOM","render","document","getElementById","data","Promise","resolve","reject","provider","sendAsync","error","message","jsonRpcFetchFunc","method","params","then","id","send","console","createClient","EventManager","methods","onload","subscribeToEvents","call","emit","quality","toLowerCase","log","arbitrum","arbitrumGoerli","mainnet","polygon","polygonMumbai","optimism","optimismGoerli","goerli","sepolia","configureChains","w3mProvider","projectId","wagmiCreateClient","autoConnect","connectors","w3mConnectors","version","subscribe","event","status","account","chain","PluginClient","WALLET_CONNECT_PROJECT_ID"],"sourceRoot":""}