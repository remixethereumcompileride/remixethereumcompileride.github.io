{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/AppContext.tsx","webpack:///./src/app/RemixPlugin.tsx","webpack:///./src/app/app.tsx","webpack:///./src/app/components/HeaderWithSettings.tsx","webpack:///./src/app/components/SubmitButton.tsx","webpack:///./src/app/components/index.ts","webpack:///./src/app/hooks/useLocalStorage.tsx","webpack:///./src/app/layouts/Default.tsx","webpack:///./src/app/layouts/index.ts","webpack:///./src/app/routes.tsx","webpack:///./src/app/utils/index.ts","webpack:///./src/app/utils/scripts.ts","webpack:///./src/app/utils/utilities.ts","webpack:///./src/app/utils/verify.ts","webpack:///./src/app/views/CaptureKeyView.tsx","webpack:///./src/app/views/ErrorView.tsx","webpack:///./src/app/views/HomeView.tsx","webpack:///./src/app/views/ReceiptsView.tsx","webpack:///./src/app/views/VerifyView.tsx","webpack:///./src/app/views/index.ts","webpack:///./src/main.tsx","webpack:///../../libs/remix-ui/helper/src/index.ts","webpack:///../../libs/remix-ui/helper/src/lib/bleach.ts","webpack:///../../libs/remix-ui/helper/src/lib/components/PluginViewWrapper.tsx","webpack:///../../libs/remix-ui/helper/src/lib/components/custom-dropdown.tsx","webpack:///../../libs/remix-ui/helper/src/lib/components/custom-tooltip.tsx","webpack:///../../libs/remix-ui/helper/src/lib/helper-components.tsx","webpack:///../../libs/remix-ui/helper/src/lib/remix-ui-helper.ts","webpack:///./src/app/App.css?4855","webpack:///ignored|/home/circleci/remix-project/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/home/circleci/remix-project/node_modules/stream-browserify/node_modules/readable-stream/lib|util","webpack:///ignored|/home/circleci/remix-project/node_modules/stream-http/node_modules/readable-stream/lib/internal/streams|util","webpack:///ignored|/home/circleci/remix-project/node_modules/stream-http/node_modules/readable-stream/lib|util"],"sourcesContent":["import React from \"react\"\nimport { PluginClient } from \"@remixproject/plugin\"\n\nimport { Receipt, ThemeType } from \"./types\"\n\nexport const AppContext = React.createContext({\n  apiKey: \"\",\n  setAPIKey: (value: string) => {\n    console.log(\"Set API Key from Context\")\n  },\n  clientInstance: {} as PluginClient,\n  receipts: [] as Receipt[],\n  setReceipts: (receipts: Receipt[]) => {\n    console.log(\"Calling Set Receipts\")\n  },\n  contracts: [] as string[],\n  setContracts: (contracts: string[]) => {\n    console.log(\"Calling Set Contract Names\")\n  },\n  themeType: \"dark\" as ThemeType,\n  setThemeType: (themeType: ThemeType) => {\n    console.log(\"Calling Set Theme Type\")\n  },\n})\n","import { PluginClient } from '@remixproject/plugin';\nimport { verify, EtherScanReturn } from './utils/verify';\nimport { getReceiptStatus, getEtherScanApi, getNetworkName } from './utils';\n\nexport class RemixClient extends PluginClient {\n\n    loaded() {\n        return this.onload()\n    }\n  \n    async verify (apiKey: string, contractAddress: string, contractArguments: string, contractName: string, compilationResultParam: any) {\n        const result = await verify(apiKey, contractAddress, contractArguments, contractName, compilationResultParam, this,\n            (value: EtherScanReturn) => {}, (value: string) => {})    \n        return result\n    }\n\n    async receiptStatus (receiptGuid: string, apiKey: string) {\n      try {\n        const network = await getNetworkName(this)\n        if (network === \"vm\") {\n          throw new Error(\"Cannot check the receipt status in the selected network\")\n        }\n        const etherscanApi = getEtherScanApi(network)\n        const receiptStatus = await getReceiptStatus(receiptGuid, apiKey, etherscanApi)\n        return {\n          message: receiptStatus.result,\n          succeed: receiptStatus.status === '0'  ? false : true\n        }\n      } catch (e: any){\n        return {\n          status: 'error',\n          message: e.message,\n          succeed: false\n        }\n      }      \n    }\n}\n","import React, { useState, useEffect, useRef } from \"react\"\n\nimport {\n  CompilationFileSources,\n  CompilationResult,\n} from \"@remixproject/plugin-api\"\n\nimport { RemixClient } from \"./RemixPlugin\";\nimport { createClient } from \"@remixproject/plugin-webview\";\n\nimport { AppContext } from \"./AppContext\"\nimport { DisplayRoutes } from \"./routes\"\n\nimport { useLocalStorage } from \"./hooks/useLocalStorage\"\n\nimport { getReceiptStatus, getEtherScanApi, getNetworkName } from \"./utils\"\nimport { Receipt, ThemeType } from \"./types\"\n\nimport \"./App.css\"\n\nexport const getNewContractNames = (compilationResult: CompilationResult) => {\n  const compiledContracts = compilationResult.contracts\n  let result: string[] = []\n\n  for (const file of Object.keys(compiledContracts)) {\n    const newContractNames = Object.keys(compiledContracts[file])\n    result = [...result, ...newContractNames]\n  }\n\n  return result\n}\n\nconst App = () => {\n  const [apiKey, setAPIKey] = useLocalStorage(\"apiKey\", \"\")\n  const [clientInstance, setClientInstance] = useState(undefined as any)\n  const [receipts, setReceipts] = useLocalStorage(\"receipts\", [])\n  const [contracts, setContracts] = useState([] as string[])\n  const [themeType, setThemeType] = useState(\"dark\" as ThemeType)\n\n  const clientInstanceRef = useRef(clientInstance)\n  clientInstanceRef.current = clientInstance\n  const contractsRef = useRef(contracts)\n  contractsRef.current = contracts\n\n  useEffect(() => {\n    const client = new RemixClient()\n    createClient(client)\n    const loadClient = async () => {\n      await client.onload()\n      setClientInstance(client)\n      client.on(\"solidity\",\n        \"compilationFinished\",\n        (\n          fileName: string,\n          source: CompilationFileSources,\n          languageVersion: string,\n          data: CompilationResult\n        ) => {\n          const newContractsNames = getNewContractNames(data)\n\n          const newContractsToSave: string[] = [\n            ...contractsRef.current,\n            ...newContractsNames,\n          ]\n\n          const uniqueContracts: string[] = [...new Set(newContractsToSave)]\n\n          setContracts(uniqueContracts)\n        }\n      )\n\n      //const currentTheme = await client.call(\"theme\", \"currentTheme\")\n      //setThemeType(currentTheme.quality)\n      //client.on(\"theme\", \"themeChanged\", (theme) => {\n      //  setThemeType(theme.quality)\n      //})\n    }\n\n    loadClient()\n  }, [])\n\n  useEffect(() => {\n    if (!clientInstance) {\n      return\n    }\n\n    const receiptsNotVerified: Receipt[] = receipts.filter((item: Receipt) => {\n      return item.status === \"Pending in queue\"\n    })\n\n    if (receiptsNotVerified.length > 0) {\n      const timer1 = setInterval(() => {\n        receiptsNotVerified.forEach(async (item) => {\n          if (!clientInstanceRef.current) {\n            return {}\n          }\n          const network = await getNetworkName(clientInstanceRef.current)\n          if (network === \"vm\") {\n            return {}\n          }\n          const status = await getReceiptStatus(\n            item.guid,\n            apiKey,\n            getEtherScanApi(network)\n          )\n          if (status.result === \"Pass - Verified\" || status.result === \"Already Verified\") {\n            const newReceipts = receipts.map((currentReceipt: Receipt) => {\n              if (currentReceipt.guid === item.guid) {\n                return {\n                  ...currentReceipt,\n                  status: status.result,\n                }\n              }\n              return currentReceipt\n            })\n\n            clearInterval(timer1)\n            setReceipts(newReceipts)\n\n            return () => {\n              clearInterval(timer1)\n            }\n          }\n          return {}\n        })\n      }, 5000)\n    }\n  }, [receipts, clientInstance, apiKey, setReceipts])\n\n  return (\n    <AppContext.Provider\n      value={{\n        apiKey,\n        setAPIKey,\n        clientInstance,\n        receipts,\n        setReceipts,\n        contracts,\n        setContracts,\n        themeType,\n        setThemeType,\n      }}\n    >\n      <DisplayRoutes />\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from \"react\"\n\nimport { NavLink } from \"react-router-dom\"\nimport { CustomTooltip } from '@remix-ui/helper'\nimport { AppContext } from \"../AppContext\"\n\ninterface Props {\n  title?: string\n  showBackButton?: boolean\n  from: string\n}\n\ninterface IconProps {\n  from: string\n}\n\nconst HomeIcon: React.FC<IconProps> = ({ from }: IconProps) => {\n  return (\n      <NavLink\n        data-id=\"home\"\n        to={{\n          pathname: \"/\"\n        }}\n        state={ from }\n      >\n        <CustomTooltip\n          tooltipText='Home'\n          tooltipId='etherscan-nav-home'\n          placement='bottom'\n        >\n          <i className=\"fas fa-home\"></i>\n        </CustomTooltip>\n      </NavLink>\n  )\n}\n\nconst ReceiptsIcon: React.FC<IconProps> = ({ from }: IconProps) => {\n  return (\n      <NavLink      \n        data-id=\"receipts\"\n        to={{\n          pathname: \"/receipts\"\n        }}\n        state={ from }\n        className=\"mx-2\"\n      >\n        <CustomTooltip\n          tooltipText='Receipts'\n          tooltipId='etherscan-nav-receipts'\n          placement='bottom'\n        >\n          <i className=\"fas fa-receipt\"></i>\n        </CustomTooltip>\n      </NavLink>\n  )\n}\n\nconst SettingsIcon: React.FC<IconProps> = ({ from }: IconProps) => {\n  return (\n    <NavLink\n      data-id=\"settings\"\n      to={{\n        pathname: \"/settings\"\n      }}\n      state= {from}\n    >\n      <CustomTooltip\n        tooltipText='Settings'\n        tooltipId='etherscan-nav-settings'\n        placement='bottom'\n      >\n        <i className=\"fas fa-cog\"></i>\n      </CustomTooltip>\n    </NavLink>\n  )\n}\n\nexport const HeaderWithSettings: React.FC<Props> = ({\n  title = \"\",\n  showBackButton = false,\n  from,\n}) => {\n  return (\n    <AppContext.Consumer>\n      {() => (\n        <div>\n          <h6 className=\"d-inline\">{title}</h6>\n          <div style={{ float: \"right\" }}>\n            <HomeIcon from={from} />\n            <ReceiptsIcon from={from} />\n            <SettingsIcon from={from} />\n          </div>\n        </div>\n      )}\n    </AppContext.Consumer>\n  )\n}\n","import React from \"react\"\nimport { CustomTooltip } from '@remix-ui/helper'\n\ninterface Props {\n  text: string\n  isSubmitting?: boolean\n  dataId?: string\n  disable?: boolean\n}\n\nexport const SubmitButton: React.FC<Props> = ({\n  text,\n  dataId,\n  isSubmitting = false,\n  disable = true\n}) => {\n  return (\n    <CustomTooltip\n      tooltipText={disable ? \"Fill the fields with valid values\" : \"Click to proceed\"}\n      tooltipId='etherscan-submit-button'\n      placement='bottom'\n    >\n      <div>\n        <button\n          data-id={dataId}\n          style={{ padding: \"0.25rem 0.4rem\", marginRight: \"0.5em\" }}\n          type=\"submit\"\n          className=\"btn btn-primary btn-block text-decoration-none\"\n          disabled={disable}\n        >\n          {!isSubmitting && text}\n          {isSubmitting && (\n            <div>\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                style={{ marginRight: \"0.3em\" }}\n              />\n              Verifying... Please wait\n            </div>\n          )}\n        </button>\n      </div>\n    </CustomTooltip>\n  )\n}\n","export { HeaderWithSettings } from \"./HeaderWithSettings\"\nexport { SubmitButton } from \"./SubmitButton\"\n","import { useState } from \"react\"\n\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.error(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { PropsWithChildren } from \"react\"\n\nimport { HeaderWithSettings } from \"../components\"\n\ninterface Props {\n  from: string\n  title?: string\n}\n\nexport const DefaultLayout: React.FC<PropsWithChildren<Props>> = ({\n  children,\n  from,\n  title\n}) => {\n  return (\n    <div>\n      <HeaderWithSettings from={from} title={title} />\n      {children}\n    </div>\n  )\n}\n","export { DefaultLayout } from \"./Default\"\n","import React from \"react\"\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  RouteProps,\n} from \"react-router-dom\"\n\nimport { ErrorView, HomeView, ReceiptsView, CaptureKeyView } from \"./views\"\nimport { DefaultLayout } from \"./layouts\"\n\ninterface Props extends RouteProps {\n  component: any // TODO: new (props: any) => React.Component\n  from: string\n}\n\nconst RouteWithHeader = ({ component: Component, ...rest }: Props) => {\n  return (\n    <Route\n      {...rest}      \n    >\n      <DefaultLayout {...rest}>\n          <Component />\n        </DefaultLayout>\n    </Route>\n  )\n}\n\nexport const DisplayRoutes = () => (\n  <Router>\n    <Routes>    \n      <Route\n        path=\"/\"\n        element={<DefaultLayout from=\"/\" title=\"Verify Smart Contracts\">\n                  <HomeView />\n                </DefaultLayout>} />\n      <Route path=\"/error\"\n      element={<ErrorView />} />\n      <Route\n        path=\"/receipts\"\n        element={<DefaultLayout from=\"/receipts\" title=\"Check Receipt GUID Status\">\n                  <ReceiptsView />\n                </DefaultLayout>} />\n      <Route\n        path=\"/settings\"\n        element={<DefaultLayout from=\"/settings\" title=\"Set Etherscan API Key\">\n                  <CaptureKeyView />\n                </DefaultLayout>} />\n    </Routes>\n  </Router>\n)\n","export * from \"./utilities\"\n","export const verifyScript = `\n/**\n * @param {string} apikey - etherscan api key.\n * @param {string} contractAddress - Address of the contract to verify.\n * @param {string} contractArguments - Parameters used in the contract constructor during the initial deployment. It should be the hex encoded value.\n * @param {string} contractName - Name of the contract\n * @param {string} contractFile - File where the contract is located\n * @returns {{ guid, status, message, succeed }} verification result\n */\nexport const verify = async (apikey: string, contractAddress: string, contractArguments: string, contractName: string, contractFile: string) => {\n    const compilationResultParam = await remix.call('compilerArtefacts' as any, 'getCompilerAbstract', contractFile)\n    console.log('verifying.. ' + contractName)\n    return await remix.call('etherscan' as any,  'verify', apikey, contractAddress, contractArguments, contractName, compilationResultParam)\n}`\n\nexport const receiptGuidScript = `\n/**\n * @param {string} apikey - etherscan api key.\n * @param {string} guid - receipt id.\n * @returns {{ status, message, succeed }} receiptStatus\n */\nexport const receiptStatus = async (apikey: string, guid: string) => {\n    return await remix.call('etherscan' as any,  'receiptStatus', guid, apikey)\n}\n`","import { PluginClient } from \"@remixproject/plugin\"\nimport axios from 'axios'\ntype RemixClient = PluginClient\n\n/*\n  status: 0=Error, 1=Pass \n  message: OK, NOTOK\n  result: explanation\n*/\nexport type receiptStatus = {\n  result: string\n  message: string\n  status: string\n}\n\nexport const getEtherScanApi = (network: string) => {\n  return network === \"main\"\n    ? `https://api.etherscan.io/api`\n    : `https://api-${network}.etherscan.io/api`\n}\n\nexport const getNetworkName = async (client: RemixClient) => {\n  const network = await client.call(\"network\", \"detectNetwork\")\n  if (!network) {\n    throw new Error(\"no known network to verify against\")\n  }\n  return network.name!.toLowerCase()\n}\n\nexport const getReceiptStatus = async (\n  receiptGuid: string,\n  apiKey: string,\n  etherscanApi: string\n): Promise<receiptStatus> => {\n  const params = `guid=${receiptGuid}&module=contract&action=checkverifystatus&apiKey=${apiKey}`\n  try {\n    const response = await axios.get(`${etherscanApi}?${params}`)\n    const { result, message, status } = response.data\n    return {\n      result,\n      message,\n      status,\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import { getNetworkName, getEtherScanApi, getReceiptStatus } from \"../utils\"\nimport { CompilationResult } from \"@remixproject/plugin-api\"\nimport { CompilerAbstract } from '@remix-project/remix-solidity'\nimport axios from 'axios'\nimport { PluginClient } from \"@remixproject/plugin\"\n\nconst resetAfter10Seconds = (client: PluginClient, setResults: (value: string) => void) => {\n    setTimeout(() => {\n      client.emit(\"statusChanged\", { key: \"none\" })\n      setResults(\"\")\n    }, 10000)\n  }\n\nexport type EtherScanReturn = {\n    guid: any,\n    status: any,\n}\nexport const verify = async (\n    apiKeyParam: string,\n    contractAddress: string,\n    contractArgumentsParam: string,\n    contractName: string,\n    compilationResultParam: CompilerAbstract, \n    client: PluginClient,\n    onVerifiedContract: (value: EtherScanReturn) => void,\n    setResults: (value: string) => void\n  ) => {\n    const network = await getNetworkName(client)\n    if (network === \"vm\") {\n        return {\n            succeed: false,\n            message: \"Cannot verify in the selected network\"\n        }\n    }\n    const etherscanApi = getEtherScanApi(network)\n\n    try {\n      const contractMetadata = getContractMetadata(\n        // cast from the remix-plugin interface to the solidity one. Should be fixed when remix-plugin move to the remix-project repository\n        compilationResultParam.data as unknown as CompilationResult,\n        contractName\n      )\n\n      if (!contractMetadata) {\n        return {\n            succeed: false,\n            message: \"Please recompile contract\"\n        }\n      }\n      \n      const contractMetadataParsed = JSON.parse(contractMetadata)\n\n      const fileName = getContractFileName(\n        // cast from the remix-plugin interface to the solidity one. Should be fixed when remix-plugin move to the remix-project repository\n        compilationResultParam.data as unknown as CompilationResult,\n        contractName\n      )\n\n      const jsonInput = {\n        language: 'Solidity',\n        sources: compilationResultParam.source.sources,\n        settings: {\n          optimizer: {\n            enabled: contractMetadataParsed.settings.optimizer.enabled,\n            runs: contractMetadataParsed.settings.optimizer.runs\n          }\n        }\n      }\n\n      const data: { [key: string]: string | any } = {\n        apikey: apiKeyParam, // A valid API-Key is required\n        module: \"contract\", // Do not change\n        action: \"verifysourcecode\", // Do not change\n        codeformat: \"solidity-standard-json-input\",\n        contractaddress: contractAddress, // Contract Address starts with 0x...\n        sourceCode: JSON.stringify(jsonInput),\n        contractname: fileName + ':' + contractName,\n        compilerversion: `v${contractMetadataParsed.compiler.version}`, // see http://etherscan.io/solcversions for list of support versions\n        constructorArguements: contractArgumentsParam ? contractArgumentsParam.replace('0x', '') : '', // if applicable\n      }\n\n      const body = new FormData()\n      Object.keys(data).forEach((key) => body.append(key, data[key]))\n\n      client.emit(\"statusChanged\", {\n        key: \"loading\",\n        type: \"info\",\n        title: \"Verifying ...\",\n      })\n      const response = await axios.post(etherscanApi, body)\n      const { message, result, status } = await response.data\n\n      if (message === \"OK\" && status === \"1\") {\n        resetAfter10Seconds(client, setResults)\n        const receiptStatus = await getReceiptStatus(\n          result,\n          apiKeyParam,\n          etherscanApi\n        )\n\n        const returnValue = {\n            guid: result,\n            status: receiptStatus.result,\n            message: `Verification process started correctly. Receipt GUID ${result}`,\n            succeed: true\n        }\n        onVerifiedContract(returnValue)\n        return returnValue\n      } else if (message === \"NOTOK\") {\n        client.emit(\"statusChanged\", {\n          key: \"failed\",\n          type: \"error\",\n          title: result,\n        })\n        const returnValue = {\n            message: result,\n            succeed: false\n        }\n        resetAfter10Seconds(client, setResults)\n        return returnValue\n      }\n      return {\n        message: 'unknown reason ' + result,\n        succeed: false\n      }\n    } catch (error: any) {\n      console.error(error)\n      setResults(\"Something wrong happened, try again\")\n      return {\n        message: error.message,\n        succeed: false\n      }\n    }\n  }\n\n  export const getContractFileName = (\n    compilationResult: CompilationResult,\n    contractName: string\n  ) => {\n    const compiledContracts = compilationResult.contracts\n    let fileName = \"\"\n  \n    for (const file of Object.keys(compiledContracts)) {\n      for (const contract of Object.keys(compiledContracts[file])) {\n        if (contract === contractName) {\n          fileName = file\n          break\n        }\n      }\n    }\n    return fileName\n  }\n  \n  export const getContractMetadata = (\n    compilationResult: CompilationResult,\n    contractName: string\n  ) => {\n    const compiledContracts = compilationResult.contracts\n    let contractMetadata = \"\"\n  \n    for (const file of Object.keys(compiledContracts)) {\n      for (const contract of Object.keys(compiledContracts[file])) {\n        if (contract === contractName) {\n          contractMetadata = compiledContracts[file][contract].metadata\n          if (contractMetadata) {\n            break\n          }\n        }\n      }\n    }\n    return contractMetadata\n  }\n","import React from \"react\"\n\nimport { Formik, ErrorMessage, Field } from \"formik\"\nimport { useNavigate, useLocation } from \"react-router-dom\"\n\nimport { AppContext } from \"../AppContext\"\nimport { SubmitButton } from \"../components\"\n\nexport const CaptureKeyView: React.FC = () => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, clientInstance, setAPIKey }) => {\n        if (!apiKey && clientInstance && clientInstance.call) clientInstance.call('notification' as any, 'toast', 'Please add API key to continue')\n        return <Formik\n          initialValues={{ apiKey }}\n          validate={(values) => {\n            const errors = {} as any\n            if (!values.apiKey) {\n              errors.apiKey = \"Required\"\n            }\n            return errors\n          }}\n          onSubmit={(values) => {\n            const apiKey = values.apiKey\n            if (apiKey.length === 34) {\n              setAPIKey(values.apiKey)\n              clientInstance.call('notification' as any, 'toast', 'API key saved successfully!!!')\n              navigate((location && location.state ? location.state : '/'))\n            } else clientInstance.call('notification' as any, 'toast', 'API key should be 34 characters long')\n          }}\n        >\n          {({ errors, touched, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\" style={{ marginBottom: \"0.5rem\" }}>\n                <label htmlFor=\"apikey\">API Key</label>\n                <Field\n                  className={\n                    errors.apiKey && touched.apiKey\n                      ? \"form-control form-control-sm is-invalid\"\n                      : \"form-control form-control-sm\"\n                  }\n                  type=\"password\"\n                  name=\"apiKey\"\n                  placeholder=\"e.g. GM1T20XY6JGSAPWKDCYZ7B2FJXKTJRFVGZ\"\n                />\n                <ErrorMessage\n                  className=\"invalid-feedback\"\n                  name=\"apiKey\"\n                  component=\"div\"\n                />\n              </div>\n\n              <div>\n                <SubmitButton text=\"Save\" dataId=\"save-api-key\" disable={false} />\n              </div>\n            </form>\n          )}\n        </Formik>\n      }\n      }\n    </AppContext.Consumer>\n  )\n}\n","import React from \"react\"\n\nexport const ErrorView: React.FC = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <img\n        style={{ paddingBottom: \"2em\" }}\n        width=\"250\"\n        src=\"https://res.cloudinary.com/key-solutions/image/upload/v1580400635/solid/error-png.png\"\n        alt=\"Error page\"\n      />\n      <h5>Sorry, something unexpected happened. </h5>\n      <h5>\n        Please raise an issue:{\" \"}\n        <a\n          style={{ color: \"red\" }}\n          href=\"https://github.com/ethereum/remix-project/issues\"\n        >\n          Here\n        </a>\n      </h5>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { Navigate } from \"react-router-dom\"\n\nimport { AppContext } from \"../AppContext\"\nimport { Receipt } from \"../types\"\n\nimport { VerifyView } from \"./VerifyView\"\n\nexport const HomeView: React.FC = () => {\n  // const [hasError, setHasError] = useState(false)\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, clientInstance, setReceipts, receipts, contracts }) => {\n        if (!apiKey && clientInstance && clientInstance.call) clientInstance.call('notification' as any, 'toast', 'Please add API key to continue')\n        return !apiKey ? (\n          <Navigate\n            to={{\n              pathname: \"/settings\"\n            }}\n          />\n        ) : (\n          <VerifyView\n            contracts={contracts}\n            client={clientInstance}\n            apiKey={apiKey}\n            onVerifiedContract={(receipt: Receipt) => {\n              const newReceipts = [...receipts, receipt]\n              setReceipts(newReceipts)\n            }}\n          />\n        )\n      }\n    }\n    </AppContext.Consumer>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { Formik, ErrorMessage, Field } from \"formik\"\nimport { getEtherScanApi, getNetworkName, getReceiptStatus } from \"../utils\"\nimport { Receipt } from \"../types\"\nimport { AppContext } from \"../AppContext\"\nimport { SubmitButton } from \"../components\"\nimport { Navigate } from \"react-router-dom\"\n\ninterface FormValues {\n  receiptGuid: string\n}\n\nexport const ReceiptsView: React.FC = () => {\n  const [results, setResults] = useState({succeed: false, message: ''})\n  const onGetReceiptStatus = async (\n    values: FormValues,\n    clientInstance: any,\n    apiKey: string\n  ) => {\n    try {\n      const network = await getNetworkName(clientInstance)\n      if (network === \"vm\") {\n        setResults({\n          succeed: false,\n          message: \"Cannot verify in the selected network\"\n      })\n        return\n      }\n      const etherscanApi = getEtherScanApi(network)\n      const result = await getReceiptStatus(\n        values.receiptGuid,\n        apiKey,\n        etherscanApi\n      )\n      setResults({\n        succeed: result.status === '1' ? true : false,\n        message: result.result\n      })\n    } catch (error: any) {\n      setResults({\n        succeed: false,\n        message: error.message\n      })\n    }\n  }\n\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, clientInstance, receipts }) => {\n        if (!apiKey && clientInstance && clientInstance.call) clientInstance.call('notification' as any, 'toast', 'Please add API key to continue')\n        return !apiKey ? (\n          <Navigate\n            to={{\n              pathname: \"/settings\"\n            }}\n          />\n        ) : (\n          <div>\n            <Formik\n              initialValues={{ receiptGuid: \"\" }}\n              validate={(values) => {\n                const errors = {} as any\n                if (!values.receiptGuid) {\n                  errors.receiptGuid = \"Required\"\n                }\n                return errors\n              }}\n              onSubmit={(values) =>\n                onGetReceiptStatus(values, clientInstance, apiKey)\n              }\n            >\n              {({ errors, touched, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <div\n                    className=\"form-group\"\n                    style={{ marginBottom: \"0.5rem\" }}\n                  >\n                    <label htmlFor=\"receiptGuid\">Receipt GUID</label>\n                    <Field\n                      className={\n                        errors.receiptGuid && touched.receiptGuid\n                          ? \"form-control form-control-sm is-invalid\"\n                          : \"form-control form-control-sm\"\n                      }\n                      type=\"text\"\n                      name=\"receiptGuid\"\n                    />\n                    <ErrorMessage\n                      className=\"invalid-feedback\"\n                      name=\"receiptGuid\"\n                      component=\"div\"\n                    />\n                  </div>\n                  <SubmitButton text=\"Check\" disable = {!touched.receiptGuid || (touched.receiptGuid && errors.receiptGuid) ? true : false} />\n                </form>\n              )}\n            </Formik>\n\n            <div\n              style={{\n                marginTop: \"2em\",\n                fontSize: \"0.8em\",\n                textAlign: \"center\",\n                color: results['succeed'] ? \"green\" : \"red\"\n              }}\n              dangerouslySetInnerHTML={{ __html: results.message ? results.message : '' }}\n            />\n\n            <ReceiptsTable receipts={receipts} />\n          </div>\n        )\n      }\n      }\n    </AppContext.Consumer>\n  )\n}\n\nconst ReceiptsTable: React.FC<{ receipts: Receipt[] }> = ({ receipts }) => {\n  return (\n    <div className=\"table-responsive\" style={{ fontSize: \"0.7em\" }}>\n      <h6>Receipts</h6>\n      <table className=\"table table-sm\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Status</th>\n            <th scope=\"col\">GUID</th>\n          </tr>\n        </thead>\n        <tbody>\n          {receipts &&\n            receipts.length > 0 &&\n            receipts.map((item: Receipt, index) => {\n              return (\n                <tr key={item.guid}>\n                  <td className={item.status === 'Pass - Verified' \n                  ? 'text-success' : (item.status === 'Pending in queue' \n                  ? 'text-warning' : (item.status === 'Already Verified'\n                  ? 'text-info': 'text-secondary'))}>{item.status}</td>\n                  <td>{item.guid}</td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from \"react\"\n\nimport {\n  PluginClient,\n} from \"@remixproject/plugin\"\nimport { CustomTooltip } from '@remix-ui/helper'\nimport { Formik, ErrorMessage, Field } from \"formik\"\n\nimport { SubmitButton } from \"../components\"\nimport { Receipt } from \"../types\"\nimport { verify } from \"../utils/verify\"\nimport { receiptGuidScript, verifyScript } from \"../utils/scripts\"\n\ninterface Props {\n  client: PluginClient\n  apiKey: string\n  onVerifiedContract: (receipt: Receipt) => void\n  contracts: string[]\n}\n\ninterface FormValues {\n  contractName: string\n  contractArguments: string\n  contractAddress: string\n}\n\nexport const VerifyView: React.FC<Props> = ({\n  apiKey,\n  client,\n  contracts,\n  onVerifiedContract,\n}) => {\n  const [results, setResults] = useState(\"\")\n  const [networkName, setNetworkName] = useState(\"Loading...\")\n  const [showConstructorArgs, setShowConstructorArgs] = useState(false)\n  const verificationResult = useRef({})\n\n  useEffect(() => {\n    if (client && client.on) {\n      client.on(\"blockchain\" as any, 'networkStatus', (result) => {\n        setNetworkName(result.network.name)\n      })\n    }\n    return () => {\n      // To fix memory leak\n      if (client && client.off) client.off(\"blockchain\" as any, 'networkStatus')\n    }\n  }, [client])\n\n  const onVerifyContract = async (values: FormValues) => {\n    const compilationResult = (await client.call(\n      \"solidity\",\n      \"getCompilationResult\"\n    )) as any\n\n    if (!compilationResult) {\n      throw new Error(\"no compilation result available\")\n    }\n\n    const contractArguments = values.contractArguments.replace(\"0x\", \"\")    \n    verificationResult.current = await verify(\n      apiKey,\n      values.contractAddress,\n      contractArguments,\n      values.contractName,\n      compilationResult,\n      client,\n      onVerifiedContract,\n      setResults,\n    )\n    setResults(verificationResult.current['message'])\n  }\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          contractName: \"\",\n          contractArguments: \"\",\n          contractAddress: \"\",\n        }}\n        validate={(values) => {\n          const errors = {} as any\n          if (!values.contractName) {\n            errors.contractName = \"Required\"\n          }\n          if (!values.contractAddress) {\n            errors.contractAddress = \"Required\"\n          }\n          if (values.contractAddress.trim() === \"\" || !values.contractAddress.startsWith('0x') \n              || values.contractAddress.length !== 42) {\n            errors.contractAddress = \"Please enter a valid contract address\"\n          }\n          return errors\n        }}\n        onSubmit={(values) => onVerifyContract(values)}\n      >\n        {({ errors, touched, handleSubmit, handleChange, isSubmitting }) => {\n          return (<form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"network\">Selected Network</label> \n              <Field\n                className=\"form-control\"\n                type=\"text\"\n                name=\"network\"\n                value={networkName}\n                disabled={true}\n              /> \n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"contractName\">Contract Name</label>              \n              <Field\n                as=\"select\"\n                className={\n                  errors.contractName && touched.contractName && contracts.length\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                name=\"contractName\"\n                onChange={async (e) => {\n                    handleChange(e)\n                    const {artefact} = await client.call(\"compilerArtefacts\" as any, \"getArtefactsByContractName\", e.target.value)\n                    if (artefact && artefact.abi && artefact.abi[0] && artefact.abi[0].type && artefact.abi[0].type === 'constructor') setShowConstructorArgs(true)\n                    else setShowConstructorArgs(false)\n                }}\n              >\n                <option disabled={true} value=\"\">\n                  { contracts.length ? 'Select a contract' : `--- No compiled contracts ---` }\n                </option>\n                {contracts.map((item) => (\n                  <option key={item} value={item}>\n                    {item}\n                  </option>\n                ))}\n              </Field>\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractName\"\n                component=\"div\"\n              />\n            </div>\n\n            <div className={ showConstructorArgs ? 'form-group d-block': 'form-group d-none' } >\n              <label htmlFor=\"contractArguments\">Constructor Arguments</label>\n              <Field\n                className={\n                  errors.contractArguments && touched.contractArguments\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                type=\"text\"\n                name=\"contractArguments\"\n                placeholder=\"hex encoded args\"\n              />\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractArguments\"\n                component=\"div\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"contractAddress\">Contract Address</label>\n              <Field\n                className={\n                  errors.contractAddress && touched.contractAddress\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                type=\"text\"\n                name=\"contractAddress\"\n                placeholder=\"e.g. 0x11b79afc03baf25c631dd70169bb6a3160b2706e\"\n              />\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractAddress\"\n                component=\"div\"\n              />\n            </div>\n\n            <SubmitButton dataId=\"verify-contract\" text=\"Verify\" \n              isSubmitting={isSubmitting} \n              disable={ !contracts.length || \n                !touched.contractName ||\n                !touched.contractAddress ||\n                (touched.contractName && errors.contractName) ||\n                (touched.contractAddress && errors.contractAddress) \n              ? true \n              : false}\n            />\n            <br/>\n            <CustomTooltip\n              tooltipText='Generate the required TS scripts to verify a contract on Etherscan'\n              tooltipId='etherscan-generate-scripts'\n              placement='bottom'\n            >\n              <button\n                type=\"button\"\n                style={{ padding: \"0.25rem 0.4rem\", marginRight: \"0.5em\", marginBottom: \"0.5em\"}}\n                className=\"btn btn-secondary btn-block\"\n                onClick={async () => {\n                  if (!await client.call('fileManager', 'exists' as any, 'scripts/etherscan/receiptStatus.ts')) {\n                    await client.call('fileManager', 'writeFile', 'scripts/etherscan/receiptStatus.ts', receiptGuidScript)\n                    await client.call('fileManager', 'open', 'scripts/etherscan/receiptStatus.ts')\n                  } else {\n                    client.call('notification' as any, 'toast', 'File receiptStatus.ts already exists')\n                  }\n                  \n                  if (!await client.call('fileManager', 'exists' as any, 'scripts/etherscan/verify.ts')) {\n                    await client.call('fileManager', 'writeFile', 'scripts/etherscan/verify.ts', verifyScript)\n                    await client.call('fileManager', 'open', 'scripts/etherscan/verify.ts')\n                  } else {\n                    client.call('notification' as any, 'toast', 'File verify.ts already exists')\n                  }\n                }}\n                >\n                  Generate Verification Scripts\n                </button>\n              </CustomTooltip>\n          </form>\n          )\n        }\n        }\n      </Formik>\n\n      <div data-id=\"verify-result\"\n        style={{ marginTop: \"2em\", fontSize: \"0.8em\", textAlign: \"center\", color: verificationResult.current['succeed'] ? \"green\" : \"red\" }}\n        dangerouslySetInnerHTML={{ __html: results }}\n      />\n\n      {/* <div style={{ display: \"block\", textAlign: \"center\", marginTop: \"1em\" }}>\n        <Link to=\"/receipts\">View Receipts</Link>\n      </div> */}\n    </div>\n  )\n}\n","export { HomeView } from \"./HomeView\"\nexport { ErrorView } from \"./ErrorView\"\nexport { ReceiptsView } from \"./ReceiptsView\"\nexport { CaptureKeyView } from \"./CaptureKeyView\"\n","import { StrictMode } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n\nimport App from './app/app';\n\nReactDOM.render(<StrictMode><App /></StrictMode>, document.getElementById('root'));\n","export * from './lib/remix-ui-helper'\nexport * from './lib/bleach'\nexport * from './lib/helper-components'\nexport * from './lib/components/PluginViewWrapper'\nexport * from './lib/components/custom-dropdown'\nexport * from './lib/components/custom-tooltip'","/*\n * remixBleach\n * a minimal html sanitizer\n * credits to cam@onswipe.com\n */\nimport * as he from 'he'\n\nexport const bleach = {\n\n  matcher: /<\\/?([a-zA-Z0-9]+)*(.*?)\\/?>/igm,\n\n  whitelist: [\n    'a',\n    'b',\n    'p',\n    'em',\n    'strong'\n  ],\n\n  analyze: function (html) {\n    html = String(html) || ''\n\n    const matches = []\n    let match\n\n    // extract all tags\n    while ((match = bleach.matcher.exec(html)) != null) {\n      const attrr = match[2].split(' ')\n      const attrs = []\n\n      // extract attributes from the tag\n      attrr.shift()\n      attrr.forEach((attr) => {\n        attr = attr.split('=')\n        const attrName = attr[0]\n        let attrValue = attr.length > 1 ? attr.slice(1).join('=') : null\n        // remove quotes from attributes\n        if (attrValue && attrValue.charAt(0).match(/'|\"/)) attrValue = attrValue.slice(1)\n        if (attrValue && attrValue.charAt(attrValue.length - 1).match(/'|\"/)) attrValue = attrValue.slice(0, -1)\n        attr = {\n          name: attrName,\n          value: attrValue\n        }\n        if (!attr.value) delete attr.value\n        if (attr.name) attrs.push(attr)\n      })\n\n      const tag = {\n        full: match[0],\n        name: match[1],\n        attr: attrs\n      }\n\n      matches.push(tag)\n    }\n\n    return matches\n  },\n\n  sanitize: function (html, options = { mode: 'white', list: bleach.whitelist, encode_entities: false}) {\n    html = String(html) || ''\n    \n    const mode = options.mode || 'white'\n    const list = options.list || bleach.whitelist\n\n    const matches = bleach.analyze(html)\n\n    if ((mode === 'white' && list.indexOf('script') === -1) ||\n       (mode === 'black' && list.indexOf('script') !== -1)) {\n      html = html.replace(/<script(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/script>/gim, '')\n    }\n\n    if ((mode === 'white' && list.indexOf('style') === -1) ||\n       (mode === 'black' && list.indexOf('style') !== -1)) {\n      html = html.replace(/<style(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/style>/gim, '')\n    }\n\n    matches.forEach(function (tag) {\n      if (mode === 'white') {\n        if (list.indexOf(tag.name) === -1) {\n          html = html.replace(tag.full, '')\n        }\n      } else if (mode === 'black') {\n        if (list.indexOf(tag.name) !== -1) {\n          html = html.replace(tag.full, '')\n        }\n      } else {\n        throw new Error('Unknown sanitization mode \"' + mode + '\"')\n      }\n    })\n\n    if (options.encode_entities) html = he.encode(html)\n\n    return html\n  }\n}\n","import React from \"react\"\nimport { useEffect, useState } from \"react\"\n\ninterface IPluginViewWrapperProps {\n    plugin: any\n  }\n  \nexport const PluginViewWrapper = (props: IPluginViewWrapperProps) => {\n  \n    const [state, setState] = useState<any>(null)\n  \n    useEffect(() => {\n      if(props.plugin.setDispatch){\n        props.plugin.setDispatch(setState)\n      }\n    }, [])\n    \n    return (\n      <>{state? \n        <>{props.plugin.updateComponent(state)}</>\n      :<></>\n      }</>\n    )\n  }","// The forwardRef is important!!\n\nimport React, { Ref } from \"react\"\n\n// Dropdown needs access to the DOM node in order to position the Menu\nexport const CustomToggle = React.forwardRef(({ children, onClick, icon, className = '' }: { children: React.ReactNode, onClick: (e) => void, icon: string, className: string }, ref: Ref<HTMLButtonElement>) => (\n  <button\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault()\n      onClick(e)\n    }}\n    className={className.replace('dropdown-toggle', '')}\n  >\n    <div className=\"d-flex\">\n      <div className=\"mr-auto text-nowrap\">{ children }</div>\n      { icon && <div className=\"pr-1\"><i className={`${icon} pr-1`}></i></div> }\n      <div><i className=\"fad fa-sort-circle\"></i></div>\n    </div>\n  </button>\n))\n\nexport const CustomIconsToggle = React.forwardRef(({ onClick, icon, className = '' }: { children?: React.ReactNode, onClick: () => void, icon: string, className: string }, ref: Ref<HTMLSpanElement>) => (\n  <span\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault()\n      onClick()\n    }}\n    className={`${className.replace('dropdown-toggle', '')} mb-0 pb-0 d-flex justify-content-end align-items-end remixuimenuicon_shadow fs-3`}\n    data-id=\"workspaceMenuDropdown\"\n  >\n    { icon && <i style={{ fontSize: 'large' }} className={`${icon}`} data-id=\"workspaceDropdownMenuIcon\"></i> }\n  </span>\n))\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nexport const CustomMenu = React.forwardRef(\n  ({ children, style, 'data-id': dataId, className, 'aria-labelledby': labeledBy }: { children: React.ReactNode, style?: React.CSSProperties, 'data-id'?: string, className: string, 'aria-labelledby'?: string }, ref: Ref<HTMLDivElement>) => {\n    const height = window.innerHeight * 0.6\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n        data-id={dataId}\n      >\n        <ul className=\"overflow-auto list-unstyled mb-0\" style={{ maxHeight: height+'px' }}>\n          {\n            children\n          }\n        </ul>\n      </div>\n    )\n  },\n)\n\nexport const ProxyAddressToggle = React.forwardRef(({ address, onClick, className = '', onChange }: { address: string, onClick: (e) => void, className: string, onChange: (e: React.ChangeEvent<HTMLInputElement>) => void }, ref: Ref<HTMLDivElement>) => (\n  <div\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault()\n      onClick(e)\n    }}\n    className={'d-flex '+ className.replace('dropdown-toggle', '')}\n    data-id=\"toggleProxyAddressDropdown\"\n  >\n    <input\n      onChange={(e) => {\n        e.preventDefault()\n        onChange(e)\n      }}\n      className=\"udapp_input form-control\"\n      value={address}\n      placeholder=\"Enter Proxy Address\"\n      style={{ width: '100%' }}\n      data-id=\"ERC1967AddressInput\"\n    />\n  </div>\n))\n\nexport const ProxyDropdownMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }: { children: React.ReactNode, style?: React.CSSProperties, className: string, 'aria-labelledby'?: string }, ref: Ref<HTMLDivElement>) => {\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <ul className=\"list-unstyled mb-0\">\n          {\n           children\n          }\n        </ul>\n      </div>\n    )\n  },\n)\n","import React from 'react';\nimport { Fragment } from 'react';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { CustomTooltipType } from '../../types/customtooltip'\n\nexport function CustomTooltip ({ children, placement, tooltipId, tooltipClasses, tooltipText, tooltipTextClasses, delay }: CustomTooltipType) {\n\n  if (typeof tooltipText !== 'string') {\n    const newTooltipText = React.cloneElement(tooltipText, {\n      className: \" bg-secondary text-wrap p-1 px-2 \"\n    })\n    tooltipText = newTooltipText\n  }\n\n  return (\n    <Fragment>\n      <OverlayTrigger\n        placement={placement}\n        overlay={\n          <Popover id={`popover-positioned-${placement}`}>\n            <Popover.Content id={!tooltipId ? `${tooltipText}Tooltip` : tooltipId} style={{minWidth: \"fit-content\"}} className={\"text-wrap p-1 px-2 bg-secondary w-100\" + tooltipClasses}>\n              {typeof tooltipText === 'string' ? (<span className={\"text-wrap p-1 px-2 bg-secondary \" + {tooltipTextClasses}}>{tooltipText}</span>) : (tooltipText)}\n            </Popover.Content>\n          </Popover>\n        }\n        delay={delay}\n      >\n        {children}\n      </OverlayTrigger>\n    </Fragment>\n  )\n}\n","import { LayoutCompatibilityReport } from '@openzeppelin/upgrades-core/dist/storage/report'\nimport React from 'react'\n\nexport const fileChangedToastMsg = (from: string, path: string) => (\n  <div><i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span>\n      {from} <span className=\"font-weight-bold text-warning\">\n        is modifying \n      </span> {path}\n    </span>\n  </div>\n)\n\nexport const compilerConfigChangedToastMsg = (from: string, value: string) => (\n  <div>\n    <b>{ from }</b> is updating the <b>Solidity compiler configuration</b>.\n    <pre className=\"text-left\">{value}</pre>\n  </div>\n)\n\nexport const compileToastMsg = (from: string, fileName: string) => (\n  <div>\n    <b>{from}</b> is requiring to compile <b>{fileName}</b>\n  </div>\n)\n\nexport const compilingToastMsg = (settings: string) => (\n  <div>\n    <b>Recompiling and debugging with params</b>\n    <pre className=\"text-left\">{settings}</pre></div>\n)\n\nexport const compilationFinishedToastMsg = () => (\n  <div>\n    <b>Compilation failed...</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const notFoundToastMsg = (address: string) => (\n  <div>\n    <b>Contract {address} not found in source code repository</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const localCompilationToastMsg = () => (\n  <div>\n    <b>Using compilation result from Solidity module</b>\n  </div>\n)\n\nexport const sourceVerificationNotAvailableToastMsg = () => (\n  <div>\n    <b>Source verification plugin not activated or not available.</b> continuing <i>without</i> source code debugging.\n  </div>\n)\n\nexport const envChangeNotification = (env: { context: string, fork: string }, from: string) => (\n  <div>\n    <i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span>\n      { from + ' '}\n      <span className=\"font-weight-bold text-warning\">\n        set your environment to\n      </span> {env && env.context}\n    </span>\n  </div>\n)\n\nexport const storageFullMessage = () => (\n  <div>\n    <i className=\"fas fa-exclamation-triangle text-danger mr-1\"></i>\n    <span className=\"font-weight-bold\">\n      <span>Cannot save this file due to full LocalStorage. Backup existing files and free up some space.</span>\n    </span>\n  </div>\n)\n\nexport const recursivePasteToastMsg = () => (\n  <div>\n    File(s) to paste is an ancestor of the destination folder\n  </div>\n)\n\nexport const logBuilder = (msg: string) => {\n  return <pre>{msg}</pre>\n}\n\nexport const cancelProxyMsg = () => (\n  <div>\n    <b>Proxy deployment cancelled.</b>\n  </div>\n)\n\nexport const cancelUpgradeMsg = () => (\n  <div>\n    <b>Upgrade with proxy cancelled.</b>\n  </div>\n)\n\nexport const deployWithProxyMsg = () => (\n  <div>\n   <b>Deploy with Proxy</b> will initiate two (2) transactions:\n    <ol className=\"pl-3\">\n      <li key=\"impl-contract\" >Deploying the implementation contract</li>\n      <li key=\"proxy-contract\" >Deploying an ERC1967 proxy contract</li>\n    </ol>\n  </div>\n)\n\nexport const upgradeWithProxyMsg = () => (\n  <div>\n    <b>Upgrade with Proxy</b> will initiate two (2) transactions:\n    <ol className=\"pl-3\">\n      <li key=\"new-impl-contract\">Deploying the new implementation contract</li>\n      <li key=\"update-proxy-contract\">Updating the proxy contract with the address of the new implementation contract</li>\n    </ol>\n  </div>\n)\n\nexport const unavailableProxyLayoutMsg = () => (\n  <div>\n    <p>The previous contract implementation is NOT available for an upgrade comparison<br /> A new storage layout will be saved for future upgrades.</p>\n  </div>\n)\n\nexport const upgradeReportMsg = (report: LayoutCompatibilityReport) => (\n  <div>\n    <div className=\"py-2 ml-2 mb-1 align-self-end mb-2 d-flex\">\n      <span className=\"align-self-center pl-4 mt-1\">\n        <i className=\"pr-2 text-warning far fa-exclamation-triangle\" aria-hidden=\"true\" style={{ fontSize: 'xxx-large', fontWeight: 'lighter' }}></i>\n        </span>\n      <div className=\"d-flex flex-column\">\n        <span className=\"pl-4 mt-1\">The storage layout of new implementation is NOT</span>\n        <span className=\"pl-4 mt-1\">compatible with the previous implementation.</span>\n        <span className=\"pl-4 mt-1\">Your contract's storage may be partially or fully erased!</span>\n      </div>\n    </div>\n    <div className='pl-4 text-danger'>\n      { report.explain() }\n    </div>\n  </div>\n)\n","import * as ethJSUtil from '@ethereumjs/util'\n\nexport const extractNameFromKey = (key: string): string => {\n  if (!key) return\n  const keyPath = key.split('/')\n\n  return keyPath[keyPath.length - 1]\n}\n\nexport const extractParentFromKey = (key: string):string => {\n  if (!key) return\n  const keyPath = key.split('/')\n\n  keyPath.pop()\n\n  return keyPath.join('/')\n}\n\nexport const checkSpecialChars = (name: string) => {\n  return name.match(/[:*?\"<>\\\\'|]/) != null\n}\n\nexport const checkSlash = (name: string) => {\n  return name.match(/\\//) != null\n}\n\nexport const createNonClashingNameAsync = async (name: string, fileManager, prefix = '') => {\n  if (!name) name = 'Undefined'\n  let _counter\n  let ext = 'sol'\n  const reg = /(.*)\\.([^.]+)/g\n  const split = reg.exec(name)\n  if (split) {\n    name = split[1]\n    ext = split[2]\n  }\n  let exist = true\n\n  do {\n    const isDuplicate = await fileManager.exists(name + (_counter || '') + prefix + '.' + ext)\n\n    if (isDuplicate) _counter = (_counter || 0) + 1\n    else exist = false\n  } while (exist)\n  const counter = _counter || ''\n\n  return name + counter + prefix + '.' + ext\n}\n\nexport const createNonClashingTitle = async (name: string, fileManager) => {\n  if (!name) name = 'Undefined'\n  let _counter\n  let exist = true\n\n  do {\n    const isDuplicate = await fileManager.exists(name + (_counter || ''))\n\n    if (isDuplicate) _counter = (_counter || 0) + 1\n    else exist = false\n  } while (exist)\n  const counter = _counter || ''\n\n  return name + counter\n}\n\nexport const joinPath = (...paths) => {\n  paths = paths.filter((value) => value !== '').map((path) => path.replace(/^\\/|\\/$/g, '')) // remove first and last slash)\n  if (paths.length === 1) return paths[0]\n  return paths.join('/')\n}\n\nexport const getPathIcon = (path: string) => {\n  return path.endsWith('.txt')\n    ? 'far fa-file-alt' : path.endsWith('.md')\n      ? 'fab fa-markdown' : path.endsWith('.sol')\n        ? 'fak fa-solidity-mono' : path.endsWith('.js')\n          ? 'fab fa-js' : path.endsWith('.json')\n            ? 'small fas fa-brackets-curly' : path.endsWith('.vy')\n              ? 'small fak fa-vyper2' : path.endsWith('.lex')\n                ? 'fak fa-lexon' : path.endsWith('ts')\n                  ? 'small fak fa-ts-logo' : path.endsWith('.tsc')\n                   ? 'fad fa-brackets-curly' : path.endsWith('.cairo')\n                     ? 'small fak fa-cairo' : 'far fa-file'\n}\n\nexport const isNumeric = (value) => {\n  return /^\\+?(0|[1-9]\\d*)$/.test(value)\n}\n\nexport const shortenAddress = (address, etherBalance?) => {\n  const len = address.length\n\n  return address.slice(0, 5) + '...' + address.slice(len - 5, len) + (etherBalance ? ' (' + etherBalance.toString() + ' ether)' : '')\n}\n\nexport const addressToString = (address) => {\n  if (!address) return null\n  if (typeof address !== 'string') {\n    address = address.toString('hex')\n  }\n  if (address.indexOf('0x') === -1) {\n    address = '0x' + address\n  }\n  return ethJSUtil.toChecksumAddress(address)\n}\n\nexport const is0XPrefixed = (value) => {\n  return value.substr(0, 2) === '0x'\n}\n\nexport const isHexadecimal = (value) => {\n  return /^[0-9a-fA-F]+$/.test(value) && (value.length % 2 === 0)\n}\n\nexport const isValidHash  = (hash) =>  { // 0x prefixed, hexadecimal, 64digit\n  const hexValue = hash.slice(2, hash.length)\n  return is0XPrefixed(hash) && /^[0-9a-fA-F]{64}$/.test(hexValue)\n}\n\nexport const shortenHexData = (data) => {\n  if (!data) return ''\n  if (data.length < 5) return data\n  const len = data.length\n  return data.slice(0, 5) + '...' + data.slice(len - 5, len)\n}\n\nexport const addSlash = (file: string) => {\n  if (!file.startsWith('/'))file = '/' + file\n  return file\n}\n\nexport const shortenProxyAddress = (address: string) => {\n  const len = address.length\n\n  return address.slice(0, 5) + '...' + address.slice(len - 5, len)\n}\n\nexport const shortenDate = (dateString: string) => {\n  const date = new Date(dateString)\n  \n  return date.toLocaleDateString(undefined, { month: \"short\", day: \"numeric\" }) + ', ' + date.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit' })\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["AppContext","React","createContext","apiKey","setAPIKey","value","console","log","clientInstance","receipts","setReceipts","contracts","setContracts","themeType","setThemeType","RemixClient","onload","contractAddress","contractArguments","contractName","compilationResultParam","verify","result","receiptGuid","getNetworkName","network","Error","etherscanApi","getEtherScanApi","getReceiptStatus","receiptStatus","message","succeed","status","PluginClient","getNewContractNames","compilationResult","compiledContracts","Object","keys","file","newContractNames","App","useLocalStorage","useState","undefined","setClientInstance","clientInstanceRef","useRef","current","contractsRef","useEffect","client","createClient","loadClient","on","fileName","source","languageVersion","data","newContractsNames","newContractsToSave","uniqueContracts","Set","receiptsNotVerified","filter","item","length","timer1","setInterval","forEach","guid","newReceipts","map","currentReceipt","clearInterval","HomeIcon","from","pathname","ReceiptsIcon","SettingsIcon","HeaderWithSettings","title","showBackButton","SubmitButton","text","dataId","isSubmitting","disable","padding","marginRight","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","setValue","valueToStore","Function","setItem","stringify","DefaultLayout","children","RouteWithHeader","Component","component","rest","DisplayRoutes","verifyScript","receiptGuidScript","call","name","toLowerCase","params","axios","get","response","resetAfter10Seconds","setResults","setTimeout","emit","apiKeyParam","contractArgumentsParam","onVerifiedContract","contractMetadata","getContractMetadata","contractMetadataParsed","getContractFileName","jsonInput","language","sources","settings","optimizer","enabled","runs","apikey","module","action","codeformat","contractaddress","sourceCode","contractname","compilerversion","compiler","version","constructorArguements","replace","body","FormData","append","type","post","returnValue","contract","metadata","CaptureKeyView","location","useLocation","navigate","useNavigate","values","errors","state","touched","handleSubmit","marginBottom","ErrorView","width","display","flexDirection","alignItems","paddingBottom","color","HomeView","receipt","ReceiptsView","results","onGetReceiptStatus","marginTop","fontSize","textAlign","__html","ReceiptsTable","index","VerifyView","networkName","setNetworkName","showConstructorArgs","setShowConstructorArgs","verificationResult","off","onVerifyContract","trim","startsWith","handleChange","e","target","artefact","abi","ReactDOM","render","document","getElementById","bleach","matcher","whitelist","analyze","html","String","matches","match","attrr","split","attrs","shift","attr","attrName","attrValue","slice","join","charAt","push","tag","full","exec","sanitize","options","mode","list","encode_entities","indexOf","he","encode","PluginViewWrapper","props","setState","plugin","setDispatch","updateComponent","CustomToggle","forwardRef","ref","onClick","icon","className","preventDefault","CustomIconsToggle","CustomMenu","style","labeledBy","height","innerHeight","maxHeight","ProxyAddressToggle","address","onChange","ProxyDropdownMenu","CustomTooltip","placement","tooltipId","tooltipClasses","tooltipText","tooltipTextClasses","delay","newTooltipText","cloneElement","minWidth","fileChangedToastMsg","path","compilerConfigChangedToastMsg","compileToastMsg","compilingToastMsg","compilationFinishedToastMsg","notFoundToastMsg","localCompilationToastMsg","sourceVerificationNotAvailableToastMsg","envChangeNotification","env","context","storageFullMessage","recursivePasteToastMsg","logBuilder","msg","cancelProxyMsg","cancelUpgradeMsg","deployWithProxyMsg","upgradeWithProxyMsg","unavailableProxyLayoutMsg","upgradeReportMsg","report","fontWeight","explain","extractNameFromKey","keyPath","extractParentFromKey","pop","checkSpecialChars","checkSlash","createNonClashingNameAsync","fileManager","prefix","ext","reg","exist","exists","_counter","isDuplicate","counter","createNonClashingTitle","joinPath","paths","getPathIcon","endsWith","isNumeric","test","shortenAddress","etherBalance","len","toString","addressToString","ethJSUtil","toChecksumAddress","is0XPrefixed","substr","isHexadecimal","isValidHash","hash","hexValue","shortenHexData","addSlash","shortenProxyAddress","shortenDate","dateString","date","Date","toLocaleDateString","month","day","toLocaleTimeString","hour","minute"],"sourceRoot":""}